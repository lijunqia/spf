<?php
// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 2.1.4.2 by WSRD Tencent.
// Generated from `/data/jcetool/taf//upload/yaozulv/GiftQueryServant.jce'
// **********************************************************************
namespace syb\ttkp\wup;
use syb\wup\c_char;
use syb\wup\c_short;
use syb\wup\c_int;
use syb\wup\c_int64;
use syb\wup\c_string;
use syb\wup\c_vector;
use syb\wup\c_map;
use syb\wup\c_struct;
class TQueryGiftRemainerReq extends c_struct
{
    public $sGiftIdList;

    public function __clone()
    {
        $this->sGiftIdList = clone $this->sGiftIdList;
    }

    public function __construct()
    {
        $this->sGiftIdList = new  c_string;
    }

    public function get_class_name()
    {
        return "GameGift.TQueryGiftRemainerReq";
    }

    public function write(&$_out,$tag)
    {
        jce_header::_pack_header($_out,'c_struct_begin',$tag);
        $this->sGiftIdList->write($_out,0);
        jce_header::_pack_header($_out,'c_struct_end',0);
    }
    public function read(&$_in,$tag,$isRequire = true)
    {
        jce_header::_check_struct($_in,$type,$tag,$isRequire);
        jce_header::_unpack_header($_in,$type,$this_tag);
        $this->sGiftIdList->read($_in , 0, true);
        $this->_skip_struct($_in);
    }
}

class TGiftLeftInfo extends c_struct
{
    public $iRet;
    public $iValid;
    public $iLeftShowType;
    public $iTotalDeploy;
    public $iTotalLeft;
    public $iMonthDeploy;
    public $iMonthLeft;
    public $iWeekDeploy;
    public $iWeekLeft;
    public $iDayDeploy;
    public $iDayLeft;
    public $iHourDeploy;
    public $iHourLeft;

    public function __clone()
    {
        $this->iRet = clone $this->iRet;
        $this->iValid = clone $this->iValid;
        $this->iLeftShowType = clone $this->iLeftShowType;
        $this->iTotalDeploy = clone $this->iTotalDeploy;
        $this->iTotalLeft = clone $this->iTotalLeft;
        $this->iMonthDeploy = clone $this->iMonthDeploy;
        $this->iMonthLeft = clone $this->iMonthLeft;
        $this->iWeekDeploy = clone $this->iWeekDeploy;
        $this->iWeekLeft = clone $this->iWeekLeft;
        $this->iDayDeploy = clone $this->iDayDeploy;
        $this->iDayLeft = clone $this->iDayLeft;
        $this->iHourDeploy = clone $this->iHourDeploy;
        $this->iHourLeft = clone $this->iHourLeft;
    }

    public function __construct()
    {
        $this->iRet = new  c_int;
        $this->iValid = new  c_int;
        $this->iLeftShowType = new  c_int;
        $this->iTotalDeploy = new  c_int;
        $this->iTotalLeft = new  c_int;
        $this->iMonthDeploy = new  c_int;
        $this->iMonthLeft = new  c_int;
        $this->iWeekDeploy = new  c_int;
        $this->iWeekLeft = new  c_int;
        $this->iDayDeploy = new  c_int;
        $this->iDayLeft = new  c_int;
        $this->iHourDeploy = new  c_int;
        $this->iHourLeft = new  c_int;
    }

    public function get_class_name()
    {
        return "GameGift.TGiftLeftInfo";
    }

    public function write(&$_out,$tag)
    {
        jce_header::_pack_header($_out,'c_struct_begin',$tag);
        $this->iRet->write($_out,0);
        $this->iValid->write($_out,1);
        $this->iLeftShowType->write($_out,2);
        $this->iTotalDeploy->write($_out,3);
        $this->iTotalLeft->write($_out,4);
        $this->iMonthDeploy->write($_out,5);
        $this->iMonthLeft->write($_out,6);
        $this->iWeekDeploy->write($_out,7);
        $this->iWeekLeft->write($_out,8);
        $this->iDayDeploy->write($_out,9);
        $this->iDayLeft->write($_out,10);
        $this->iHourDeploy->write($_out,11);
        $this->iHourLeft->write($_out,12);
        jce_header::_pack_header($_out,'c_struct_end',0);
    }
    public function read(&$_in,$tag,$isRequire = true)
    {
        jce_header::_check_struct($_in,$type,$tag,$isRequire);
        jce_header::_unpack_header($_in,$type,$this_tag);
        $this->iRet->read($_in , 0, true);
        $this->iValid->read($_in , 1, true);
        $this->iLeftShowType->read($_in , 2, true);
        $this->iTotalDeploy->read($_in , 3, false);
        $this->iTotalLeft->read($_in , 4, false);
        $this->iMonthDeploy->read($_in , 5, false);
        $this->iMonthLeft->read($_in , 6, false);
        $this->iWeekDeploy->read($_in , 7, false);
        $this->iWeekLeft->read($_in , 8, false);
        $this->iDayDeploy->read($_in , 9, false);
        $this->iDayLeft->read($_in , 10, false);
        $this->iHourDeploy->read($_in , 11, false);
        $this->iHourLeft->read($_in , 12, false);
        $this->_skip_struct($_in);
    }
}

class TQueryGiftRemainerRsp extends c_struct
{
    public $mGiftLeft;

    public function __clone()
    {
        $this->mGiftLeft = clone $this->mGiftLeft;
    }

    public function __construct()
    {
        $this->mGiftLeft = new  c_map (new c_int,new TGiftLeftInfo);
    }

    public function get_class_name()
    {
        return "GameGift.TQueryGiftRemainerRsp";
    }

    public function write(&$_out,$tag)
    {
        jce_header::_pack_header($_out,'c_struct_begin',$tag);
        $this->mGiftLeft->write($_out,0);
        jce_header::_pack_header($_out,'c_struct_end',0);
    }
    public function read(&$_in,$tag,$isRequire = true)
    {
        jce_header::_check_struct($_in,$type,$tag,$isRequire);
        jce_header::_unpack_header($_in,$type,$this_tag);
        $this->mGiftLeft->read($_in , 0, true);
        $this->_skip_struct($_in);
    }
}

class TQueryGiftGotStatusReq extends c_struct
{
    public $sGiftIdList;
    public $stUserLoginInfo;
    public $iAccountType;

    public function __clone()
    {
        $this->sGiftIdList = clone $this->sGiftIdList;
        $this->stUserLoginInfo = clone $this->stUserLoginInfo;
        $this->iAccountType = clone $this->iAccountType;
    }

    public function __construct()
    {
        $this->sGiftIdList = new  c_string;
        $this->stUserLoginInfo = new  TUserLogin;
        $this->iAccountType = new  c_int;
    }

    public function get_class_name()
    {
        return "GameGift.TQueryGiftGotStatusReq";
    }

    public function write(&$_out,$tag)
    {
        jce_header::_pack_header($_out,'c_struct_begin',$tag);
        $this->sGiftIdList->write($_out,0);
        $this->stUserLoginInfo->write($_out,1);
        $this->iAccountType->write($_out,2);
        jce_header::_pack_header($_out,'c_struct_end',0);
    }
    public function read(&$_in,$tag,$isRequire = true)
    {
        jce_header::_check_struct($_in,$type,$tag,$isRequire);
        jce_header::_unpack_header($_in,$type,$this_tag);
        $this->sGiftIdList->read($_in , 0, true);
        $this->stUserLoginInfo->read($_in , 1, true);
        $this->iAccountType->read($_in , 2, false);
        $this->_skip_struct($_in);
    }
}

class TGiftGotInfo extends c_struct
{
    public $iRet;
    public $iValid;
    public $iGotFlag;
    public $vGotGroupIds;

    public function __clone()
    {
        $this->iRet = clone $this->iRet;
        $this->iValid = clone $this->iValid;
        $this->iGotFlag = clone $this->iGotFlag;
        $this->vGotGroupIds = clone $this->vGotGroupIds;
    }

    public function __construct()
    {
        $this->iRet = new  c_int;
        $this->iValid = new  c_int;
        $this->iGotFlag = new  c_int;
        $this->vGotGroupIds = new  c_vector (new c_int64);
    }

    public function get_class_name()
    {
        return "GameGift.TGiftGotInfo";
    }

    public function write(&$_out,$tag)
    {
        jce_header::_pack_header($_out,'c_struct_begin',$tag);
        $this->iRet->write($_out,0);
        $this->iValid->write($_out,1);
        $this->iGotFlag->write($_out,2);
        $this->vGotGroupIds->write($_out,3);
        jce_header::_pack_header($_out,'c_struct_end',0);
    }
    public function read(&$_in,$tag,$isRequire = true)
    {
        jce_header::_check_struct($_in,$type,$tag,$isRequire);
        jce_header::_unpack_header($_in,$type,$this_tag);
        $this->iRet->read($_in , 0, true);
        $this->iValid->read($_in , 1, true);
        $this->iGotFlag->read($_in , 2, true);
        $this->vGotGroupIds->read($_in , 3, false);
        $this->_skip_struct($_in);
    }
}

class TQueryGiftGotStatusRsp extends c_struct
{
    public $mGiftGot;

    public function __clone()
    {
        $this->mGiftGot = clone $this->mGiftGot;
    }

    public function __construct()
    {
        $this->mGiftGot = new  c_map (new c_int,new TGiftGotInfo);
    }

    public function get_class_name()
    {
        return "GameGift.TQueryGiftGotStatusRsp";
    }

    public function write(&$_out,$tag)
    {
        jce_header::_pack_header($_out,'c_struct_begin',$tag);
        $this->mGiftGot->write($_out,0);
        jce_header::_pack_header($_out,'c_struct_end',0);
    }
    public function read(&$_in,$tag,$isRequire = true)
    {
        jce_header::_check_struct($_in,$type,$tag,$isRequire);
        jce_header::_unpack_header($_in,$type,$this_tag);
        $this->mGiftGot->read($_in , 0, true);
        $this->_skip_struct($_in);
    }
}

class TQueryGiftGotStatusForNonSybReq extends c_struct
{
    public $sGiftIdList;
    public $sAccount;
    public $iAccountType;

    public function __clone()
    {
        $this->sGiftIdList = clone $this->sGiftIdList;
        $this->sAccount = clone $this->sAccount;
        $this->iAccountType = clone $this->iAccountType;
    }

    public function __construct()
    {
        $this->sGiftIdList = new  c_string;
        $this->sAccount = new  c_string;
        $this->iAccountType = new  c_int;
    }

    public function get_class_name()
    {
        return "GameGift.TQueryGiftGotStatusForNonSybReq";
    }

    public function write(&$_out,$tag)
    {
        jce_header::_pack_header($_out,'c_struct_begin',$tag);
        $this->sGiftIdList->write($_out,0);
        $this->sAccount->write($_out,1);
        $this->iAccountType->write($_out,2);
        jce_header::_pack_header($_out,'c_struct_end',0);
    }
    public function read(&$_in,$tag,$isRequire = true)
    {
        jce_header::_check_struct($_in,$type,$tag,$isRequire);
        jce_header::_unpack_header($_in,$type,$this_tag);
        $this->sGiftIdList->read($_in , 0, true);
        $this->sAccount->read($_in , 1, true);
        $this->iAccountType->read($_in , 2, true);
        $this->_skip_struct($_in);
    }
}

class TQueryGroupGiftRemainerReq extends c_struct
{
    public $sGiftIdList;
    public $iGroupType;
    public $sGroupId;

    public function __clone()
    {
        $this->sGiftIdList = clone $this->sGiftIdList;
        $this->iGroupType = clone $this->iGroupType;
        $this->sGroupId = clone $this->sGroupId;
    }

    public function __construct()
    {
        $this->sGiftIdList = new  c_string;
        $this->iGroupType = new  c_int;
        $this->sGroupId = new  c_string;
    }

    public function get_class_name()
    {
        return "GameGift.TQueryGroupGiftRemainerReq";
    }

    public function write(&$_out,$tag)
    {
        jce_header::_pack_header($_out,'c_struct_begin',$tag);
        $this->sGiftIdList->write($_out,0);
        $this->iGroupType->write($_out,1);
        $this->sGroupId->write($_out,2);
        jce_header::_pack_header($_out,'c_struct_end',0);
    }
    public function read(&$_in,$tag,$isRequire = true)
    {
        jce_header::_check_struct($_in,$type,$tag,$isRequire);
        jce_header::_unpack_header($_in,$type,$this_tag);
        $this->sGiftIdList->read($_in , 0, true);
        $this->iGroupType->read($_in , 1, true);
        $this->sGroupId->read($_in , 2, true);
        $this->_skip_struct($_in);
    }
}

class TQueryGroupGiftRemainerRsp extends c_struct
{
    public $mGiftLeft;

    public function __clone()
    {
        $this->mGiftLeft = clone $this->mGiftLeft;
    }

    public function __construct()
    {
        $this->mGiftLeft = new  c_map (new c_int,new c_int);
    }

    public function get_class_name()
    {
        return "GameGift.TQueryGroupGiftRemainerRsp";
    }

    public function write(&$_out,$tag)
    {
        jce_header::_pack_header($_out,'c_struct_begin',$tag);
        $this->mGiftLeft->write($_out,0);
        jce_header::_pack_header($_out,'c_struct_end',0);
    }
    public function read(&$_in,$tag,$isRequire = true)
    {
        jce_header::_check_struct($_in,$type,$tag,$isRequire);
        jce_header::_unpack_header($_in,$type,$this_tag);
        $this->mGiftLeft->read($_in , 0, true);
        $this->_skip_struct($_in);
    }
}

class TGetUserCanGetGiftNumReq extends c_struct
{
    public $sSybId;
    public $iAccountType;
    public $iMobileOS;
    public $lGameId;
    public $iChannel;

    public function __clone()
    {
        $this->sSybId = clone $this->sSybId;
        $this->iAccountType = clone $this->iAccountType;
        $this->iMobileOS = clone $this->iMobileOS;
        $this->lGameId = clone $this->lGameId;
        $this->iChannel = clone $this->iChannel;
    }

    public function __construct()
    {
        $this->sSybId = new  c_string;
        $this->iAccountType = new  c_int;
        $this->iMobileOS = new  c_int;
        $this->lGameId = new  c_int64;
        $this->iChannel = new  c_int;
    }

    public function get_class_name()
    {
        return "GameGift.TGetUserCanGetGiftNumReq";
    }

    public function write(&$_out,$tag)
    {
        jce_header::_pack_header($_out,'c_struct_begin',$tag);
        $this->sSybId->write($_out,0);
        $this->iAccountType->write($_out,1);
        $this->iMobileOS->write($_out,2);
        $this->lGameId->write($_out,3);
        $this->iChannel->write($_out,4);
        jce_header::_pack_header($_out,'c_struct_end',0);
    }
    public function read(&$_in,$tag,$isRequire = true)
    {
        jce_header::_check_struct($_in,$type,$tag,$isRequire);
        jce_header::_unpack_header($_in,$type,$this_tag);
        $this->sSybId->read($_in , 0, true);
        $this->iAccountType->read($_in , 1, true);
        $this->iMobileOS->read($_in , 2, true);
        $this->lGameId->read($_in , 3, true);
        $this->iChannel->read($_in , 4, false);
        $this->_skip_struct($_in);
    }
}

class TGetUserCanGetGiftNumRsp extends c_struct
{
    public $iResult;
    public $iCount;

    public function __clone()
    {
        $this->iResult = clone $this->iResult;
        $this->iCount = clone $this->iCount;
    }

    public function __construct()
    {
        $this->iResult = new  c_int;
        $this->iCount = new  c_int;
    }

    public function get_class_name()
    {
        return "GameGift.TGetUserCanGetGiftNumRsp";
    }

    public function write(&$_out,$tag)
    {
        jce_header::_pack_header($_out,'c_struct_begin',$tag);
        $this->iResult->write($_out,0);
        $this->iCount->write($_out,1);
        jce_header::_pack_header($_out,'c_struct_end',0);
    }
    public function read(&$_in,$tag,$isRequire = true)
    {
        jce_header::_check_struct($_in,$type,$tag,$isRequire);
        jce_header::_unpack_header($_in,$type,$this_tag);
        $this->iResult->read($_in , 0, true);
        $this->iCount->read($_in , 1, true);
        $this->_skip_struct($_in);
    }
}

class TGetUserHasRolePartitionListReq extends c_struct
{
    public $stUserLoginInfo;
    public $iAccountType;
    public $lGameId;
    public $iPlatId;
    public $iAccountHuTong;

    public function __clone()
    {
        $this->stUserLoginInfo = clone $this->stUserLoginInfo;
        $this->iAccountType = clone $this->iAccountType;
        $this->lGameId = clone $this->lGameId;
        $this->iPlatId = clone $this->iPlatId;
        $this->iAccountHuTong = clone $this->iAccountHuTong;
    }

    public function __construct()
    {
        $this->stUserLoginInfo = new  TUserLogin;
        $this->iAccountType = new  c_int;
        $this->lGameId = new  c_int64;
        $this->iPlatId = new  c_int;
        $this->iAccountHuTong = new  c_int;
    }

    public function get_class_name()
    {
        return "GameGift.TGetUserHasRolePartitionListReq";
    }

    public function write(&$_out,$tag)
    {
        jce_header::_pack_header($_out,'c_struct_begin',$tag);
        $this->stUserLoginInfo->write($_out,0);
        $this->iAccountType->write($_out,1);
        $this->lGameId->write($_out,2);
        $this->iPlatId->write($_out,3);
        $this->iAccountHuTong->write($_out,4);
        jce_header::_pack_header($_out,'c_struct_end',0);
    }
    public function read(&$_in,$tag,$isRequire = true)
    {
        jce_header::_check_struct($_in,$type,$tag,$isRequire);
        jce_header::_unpack_header($_in,$type,$this_tag);
        $this->stUserLoginInfo->read($_in , 0, true);
        $this->iAccountType->read($_in , 1, true);
        $this->lGameId->read($_in , 2, true);
        $this->iPlatId->read($_in , 3, false);
        $this->iAccountHuTong->read($_in , 4, false);
        $this->_skip_struct($_in);
    }
}

class TGameAndPartitionInfo extends c_struct
{
    public $sOpenId;
    public $iPartitionId;
    public $iPlatId;
    public $iAccountType;
    public $sPartitionName;
    public $sPartitionReName;

    public function __clone()
    {
        $this->sOpenId = clone $this->sOpenId;
        $this->iPartitionId = clone $this->iPartitionId;
        $this->iPlatId = clone $this->iPlatId;
        $this->iAccountType = clone $this->iAccountType;
        $this->sPartitionName = clone $this->sPartitionName;
        $this->sPartitionReName = clone $this->sPartitionReName;
    }

    public function __construct()
    {
        $this->sOpenId = new  c_string;
        $this->iPartitionId = new  c_int;
        $this->iPlatId = new  c_int;
        $this->iAccountType = new  c_int;
        $this->sPartitionName = new  c_string;
        $this->sPartitionReName = new  c_string;
    }

    public function get_class_name()
    {
        return "GameGift.TGameAndPartitionInfo";
    }

    public function write(&$_out,$tag)
    {
        jce_header::_pack_header($_out,'c_struct_begin',$tag);
        $this->sOpenId->write($_out,0);
        $this->iPartitionId->write($_out,1);
        $this->iPlatId->write($_out,2);
        $this->iAccountType->write($_out,3);
        $this->sPartitionName->write($_out,4);
        $this->sPartitionReName->write($_out,5);
        jce_header::_pack_header($_out,'c_struct_end',0);
    }
    public function read(&$_in,$tag,$isRequire = true)
    {
        jce_header::_check_struct($_in,$type,$tag,$isRequire);
        jce_header::_unpack_header($_in,$type,$this_tag);
        $this->sOpenId->read($_in , 0, true);
        $this->iPartitionId->read($_in , 1, true);
        $this->iPlatId->read($_in , 2, true);
        $this->iAccountType->read($_in , 3, true);
        $this->sPartitionName->read($_in , 4, true);
        $this->sPartitionReName->read($_in , 5, true);
        $this->_skip_struct($_in);
    }
}

class TGetUserHasRolePartitionListRsp extends c_struct
{
    public $iResult;
    public $sErrMsg;
    public $vecPartitionList;

    public function __clone()
    {
        $this->iResult = clone $this->iResult;
        $this->sErrMsg = clone $this->sErrMsg;
        $this->vecPartitionList = clone $this->vecPartitionList;
    }

    public function __construct()
    {
        $this->iResult = new  c_int;
        $this->sErrMsg = new  c_string;
        $this->vecPartitionList = new  c_vector (new TGameAndPartitionInfo);
    }

    public function get_class_name()
    {
        return "GameGift.TGetUserHasRolePartitionListRsp";
    }

    public function write(&$_out,$tag)
    {
        jce_header::_pack_header($_out,'c_struct_begin',$tag);
        $this->iResult->write($_out,0);
        $this->sErrMsg->write($_out,1);
        $this->vecPartitionList->write($_out,2);
        jce_header::_pack_header($_out,'c_struct_end',0);
    }
    public function read(&$_in,$tag,$isRequire = true)
    {
        jce_header::_check_struct($_in,$type,$tag,$isRequire);
        jce_header::_unpack_header($_in,$type,$this_tag);
        $this->iResult->read($_in , 0, true);
        $this->sErrMsg->read($_in , 1, true);
        $this->vecPartitionList->read($_in , 2, false);
        $this->_skip_struct($_in);
    }
}

class TGetUserSelectRoleInfoReq extends c_struct
{
    public $lSybId;
    public $iAccountType;
    public $lGameId;
    public $iPlatId;

    public function __clone()
    {
        $this->lSybId = clone $this->lSybId;
        $this->iAccountType = clone $this->iAccountType;
        $this->lGameId = clone $this->lGameId;
        $this->iPlatId = clone $this->iPlatId;
    }

    public function __construct()
    {
        $this->lSybId = new  c_int64;
        $this->iAccountType = new  c_int;
        $this->lGameId = new  c_int64;
        $this->iPlatId = new  c_int;
    }

    public function get_class_name()
    {
        return "GameGift.TGetUserSelectRoleInfoReq";
    }

    public function write(&$_out,$tag)
    {
        jce_header::_pack_header($_out,'c_struct_begin',$tag);
        $this->lSybId->write($_out,0);
        $this->iAccountType->write($_out,1);
        $this->lGameId->write($_out,2);
        $this->iPlatId->write($_out,3);
        jce_header::_pack_header($_out,'c_struct_end',0);
    }
    public function read(&$_in,$tag,$isRequire = true)
    {
        jce_header::_check_struct($_in,$type,$tag,$isRequire);
        jce_header::_unpack_header($_in,$type,$this_tag);
        $this->lSybId->read($_in , 0, true);
        $this->iAccountType->read($_in , 1, true);
        $this->lGameId->read($_in , 2, true);
        $this->iPlatId->read($_in , 3, false);
        $this->_skip_struct($_in);
    }
}

class TGetUserSelectRoleInfoRsp extends c_struct
{
    public $iResult;
    public $partitionInfo;

    public function __clone()
    {
        $this->iResult = clone $this->iResult;
        $this->partitionInfo = clone $this->partitionInfo;
    }

    public function __construct()
    {
        $this->iResult = new  c_int;
        $this->partitionInfo = new  TGameAndPartitionInfo;
    }

    public function get_class_name()
    {
        return "GameGift.TGetUserSelectRoleInfoRsp";
    }

    public function write(&$_out,$tag)
    {
        jce_header::_pack_header($_out,'c_struct_begin',$tag);
        $this->iResult->write($_out,0);
        $this->partitionInfo->write($_out,1);
        jce_header::_pack_header($_out,'c_struct_end',0);
    }
    public function read(&$_in,$tag,$isRequire = true)
    {
        jce_header::_check_struct($_in,$type,$tag,$isRequire);
        jce_header::_unpack_header($_in,$type,$this_tag);
        $this->iResult->read($_in , 0, true);
        $this->partitionInfo->read($_in , 1, false);
        $this->_skip_struct($_in);
    }
}


